[{"path":"https://andreaczhang.github.io/noreden/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 noreden authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://andreaczhang.github.io/noreden/articles/noreden.html","id":"select-food-and-outcomes-of-interest","dir":"Articles","previous_headings":"","what":"Select food and outcomes of interest","title":"Introduction to `noreden`","text":"Input data","code":"tag_food_9 <- c('Bread', 'Vegetables', 'Red meat',                'Milk, yoghurt', 'Fish', 'Cheese',                'Eggs', 'Fruit, berries', 'Potatoes')  tag_outcome_7 <- c('energy', 'protein', 'carbs', 'fat',                     'vitaminc',  'calcium', 'ghge') diet_selected <- select_diet(   data_diet = all_diet,   tag_food = tag_food_9)  diet_selected #> # A tibble: 9 × 4 #>   food_name      intake_mean intake_lwr intake_upr #>   <chr>                <dbl>      <dbl>      <dbl> #> 1 Bread                188.       18.8        344. #> 2 Potatoes              72.8       7.28       231. #> 3 Vegetables           166.       16.6        420. #> 4 Fruit, berries       184.       18.4        553. #> 5 Red meat             126.       12.6        300. #> 6 Fish                  74.6       7.46       303. #> 7 Eggs                  26.4       2.64       112. #> 8 Milk, yoghurt        329.       32.9        901. #> 9 Cheese                46.6       4.66       122. cpu_selected <- select_perunit(   data_perunit_contrib = contrib_per_unit,    tag_food = tag_food_9,    tag_outcome = tag_outcome_7) cpu_selected #> # A tibble: 9 × 8 #>   food_name      energy protein   carbs     fat vitaminc calcium    ghge #>   <chr>           <dbl>   <dbl>   <dbl>   <dbl>    <dbl>   <dbl>   <dbl> #> 1 Bread           10.7  0.0912  0.441   0.0302   0.00570  0.336  0.00107 #> 2 Potatoes         3.79 0.0206  0.178   0.00737  0.133    0.0885 0.00037 #> 3 Vegetables       1.57 0.0149  0.0498  0.00841  0.207    0.259  0.00103 #> 4 Fruit, berries   2.73 0.00758 0.134   0.00408  0.198    0.152  0.00072 #> 5 Red meat         8.34 0.173   0.0136  0.139    0.0425   0.111  0.0129  #> 6 Fish             6.09 0.170   0.0245  0.0748   0        0.245  0.00311 #> 7 Eggs             6.18 0.130   0.00407 0.106    0        0.528  0.00215 #> 8 Milk, yoghurt    1.98 0.0359  0.0559  0.0111   0        1.28   0.00143 #> 9 Cheese          13.5  0.217   0.0484  0.242    0        6.59   0.0103"},{"path":"https://andreaczhang.github.io/noreden/articles/noreden.html","id":"compute-total-contribution","dir":"Articles","previous_headings":"","what":"Compute total contribution","title":"Introduction to `noreden`","text":"selected food outcomes interest","code":"tc <- compute_total_contrib(   data_diet = diet_selected,    data_perunit_contrib = cpu_selected)  tc #> $total_contrib #>   tag_outcome total_contrib #> 1      energy   6002.791497 #> 2     protein     82.349152 #> 3       carbs    153.317587 #> 4         fat     49.280653 #> 5    vitaminc     86.965858 #> 6     calcium    914.751986 #> 7        ghge      3.404557 #>  #> $tag_food #> [1] \"Bread\"          \"Potatoes\"       \"Vegetables\"     \"Fruit, berries\" #> [5] \"Red meat\"       \"Fish\"           \"Eggs\"           \"Milk, yoghurt\"  #> [9] \"Cheese\"         #>  #> $tag_outcome #> [1] \"energy\"   \"protein\"  \"carbs\"    \"fat\"      \"vitaminc\" \"calcium\"  \"ghge\""},{"path":"https://andreaczhang.github.io/noreden/articles/noreden.html","id":"set-constraints","dir":"Articles","previous_headings":"","what":"Set constraints","title":"Introduction to `noreden`","text":"Use total contribution constraint coefficients compute upper lower bound","code":"constr_coef_df <- set_constr_coef(   tag_outcome = tag_outcome_7,    coef_lwr = rep(0.9, length(tag_outcome_7)),    coef_upr = rep(1.0, length(tag_outcome_7))) constr_coef_df #>   tag_outcome coef_constrlwr coef_construpr #> 1      energy            0.9              1 #> 2     protein            0.9              1 #> 3       carbs            0.9              1 #> 4         fat            0.9              1 #> 5    vitaminc            0.9              1 #> 6     calcium            0.9              1 #> 7        ghge            0.9              1 # reduce ghge to 0.9 constr_coef_df_red <- reduce_constr(   data_constr_coef = constr_coef_df,    tag_outcome_reduce = 'ghge',    coef_reduce = 0.9) constr_coef_df_red #>   tag_outcome coef_constrlwr coef_construpr #> 1      energy           0.90            1.0 #> 2     protein           0.90            1.0 #> 3       carbs           0.90            1.0 #> 4         fat           0.90            1.0 #> 5    vitaminc           0.90            1.0 #> 6     calcium           0.90            1.0 #> 7        ghge           0.81            0.9 cd_constr_raw_reduce <- compute_constr(   data_total_contrib = tc$total_contrib,    data_constr_coef = constr_coef_df_red)  cd_constr_raw_reduce #>   tag_outcome total_contrib coef_constrlwr coef_construpr  constr_lwr #> 1      energy   6002.791497           0.90            1.0 5402.512347 #> 2     protein     82.349152           0.90            1.0   74.114237 #> 3       carbs    153.317587           0.90            1.0  137.985828 #> 4         fat     49.280653           0.90            1.0   44.352588 #> 5    vitaminc     86.965858           0.90            1.0   78.269272 #> 6     calcium    914.751986           0.90            1.0  823.276788 #> 7        ghge      3.404557           0.81            0.9    2.757691 #>    constr_upr #> 1 6002.791497 #> 2   82.349152 #> 3  153.317587 #> 4   49.280653 #> 5   86.965858 #> 6  914.751986 #> 7    3.064101"},{"path":"https://andreaczhang.github.io/noreden/articles/placeholder.html","id":"give-it-a-try","dir":"Articles","previous_headings":"","what":"Give it a try","title":"Introduction to `noreden`","text":"Input data try visualize results  Percentage  Can actually put side side.","code":"data_newdiet #>                 food_name current    new absolute_change percent_change #> 1                   Bread  188.32 189.11            0.79            0.4 #> 2            Other grains   48.31  46.07           -2.24           -4.6 #> 3                Potatoes   72.79  72.45           -0.35           -0.5 #> 4              Vegetables  165.99 163.69           -2.30           -1.4 #> 5          Fruit, berries  184.13 182.43           -1.70           -0.9 #> 6                Red meat  126.26  98.97          -27.29          -21.6 #> 7                    Fish   74.62  73.18           -1.44           -1.9 #> 8                    Eggs   26.41  27.18            0.77            2.9 #> 9           Milk, yoghurt  328.65 325.98           -2.67           -0.8 #> 10                 Cheese   46.60  30.64          -15.96          -34.3 #> 11 Butter, margarine, oil   32.32  34.41            2.09            6.5 #> 12          Sugar, sweets   18.14  13.07           -5.08          -28.0 #>    diet_bound_lwr diet_bound_upr #> 1           18.83          343.8 #> 2            4.83          155.7 #> 3            7.28          230.7 #> 4           16.60          419.7 #> 5           18.41          552.7 #> 6           12.63          299.6 #> 7            7.46          302.9 #> 8            2.64          111.6 #> 9           32.86          900.6 #> 10           4.66          121.6 #> 11           3.23           71.4 #> 12           1.81           66.0 ddd <- prep_diet_comparison_gram(data_dietsummary = data_newdiet) p1 <- plot(plot_obj = ddd,      title_text = 'New diet',      axis_x_text = 'Food groups',      axis_y_text = 'Intake (grams)') p1 ddd <- prep_diet_comparison_percent(data_dietsummary = data_newdiet) p2 <- plot(plot_obj = ddd,      title_text = 'Percent change',      axis_x_text = 'Food groups',      axis_y_text = 'Percent') p2 library(patchwork) p1 + p2 + plot_layout(nrow = 1)"},{"path":"https://andreaczhang.github.io/noreden/articles/visualize_results.html","id":"give-it-a-try","dir":"Articles","previous_headings":"","what":"Give it a try","title":"Result visualization","text":"Input data try visualize results  Percentage  Can actually put side side.","code":"data_newdiet #>                 food_name current    new absolute_change percent_change #> 1                   Bread  188.32 189.11            0.79            0.4 #> 2            Other grains   48.31  46.07           -2.24           -4.6 #> 3                Potatoes   72.79  72.45           -0.35           -0.5 #> 4              Vegetables  165.99 163.69           -2.30           -1.4 #> 5          Fruit, berries  184.13 182.43           -1.70           -0.9 #> 6                Red meat  126.26  98.97          -27.29          -21.6 #> 7                    Fish   74.62  73.18           -1.44           -1.9 #> 8                    Eggs   26.41  27.18            0.77            2.9 #> 9           Milk, yoghurt  328.65 325.98           -2.67           -0.8 #> 10                 Cheese   46.60  30.64          -15.96          -34.3 #> 11 Butter, margarine, oil   32.32  34.41            2.09            6.5 #> 12          Sugar, sweets   18.14  13.07           -5.08          -28.0 #>    diet_bound_lwr diet_bound_upr #> 1           18.83          343.8 #> 2            4.83          155.7 #> 3            7.28          230.7 #> 4           16.60          419.7 #> 5           18.41          552.7 #> 6           12.63          299.6 #> 7            7.46          302.9 #> 8            2.64          111.6 #> 9           32.86          900.6 #> 10           4.66          121.6 #> 11           3.23           71.4 #> 12           1.81           66.0 ddd <- prep_diet_comparison_gram(data_dietsummary = data_newdiet) p1 <- plot_diet_comparison_gram(plot_obj = ddd,      title_text = 'New diet',      axis_x_text = 'Food groups',      axis_y_text = 'Intake (grams)') p1 ddd <- prep_diet_comparison_percent(data_dietsummary = data_newdiet) p2 <- plot_diet_comparison_percent(plot_obj = ddd,      title_text = 'Percent change',      axis_x_text = 'Food groups',      axis_y_text = 'Percent') p2 library(patchwork) p1 + p2 + plot_layout(nrow = 1)"},{"path":"https://andreaczhang.github.io/noreden/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Chi Zhang. Author, maintainer. Julie Marie Lengle. Author.","code":""},{"path":"https://andreaczhang.github.io/noreden/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Zhang C, Marie Lengle J (2023). noreden: User-friendly functions tools nutrition researcher explore diet design, various nutritional environmental constraints. R package version 0.1.0, https://github.com/andreaczhang/noreden, https://andreaczhang.github.io/noreden/.","code":"@Manual{,   title = {noreden: User-friendly functions and tools for nutrition researcher to explore diet design, under various nutritional and environmental constraints},   author = {Chi Zhang and Julie {Marie Lengle}},   year = {2023},   note = {R package version 0.1.0, https://github.com/andreaczhang/noreden},   url = {https://andreaczhang.github.io/noreden/}, }"},{"path":"https://andreaczhang.github.io/noreden/index.html","id":"noreden-","dir":"","previous_headings":"","what":"User-friendly functions and tools for nutrition researcher to explore diet design, under various nutritional and environmental constraints","title":"User-friendly functions and tools for nutrition researcher to explore diet design, under various nutritional and environmental constraints","text":"package noreden provides user-friendly functions tools nutrition researcher explore diet design, various nutritional environmental constraints.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://andreaczhang.github.io/noreden/index.html","id":"development","dir":"","previous_headings":"Installation","what":"Development","title":"User-friendly functions and tools for nutrition researcher to explore diet design, under various nutritional and environmental constraints","text":"can install current development version ,","code":"devtools::install_github(\"andreaczhang/noreden\")"},{"path":"https://andreaczhang.github.io/noreden/index.html","id":"get-started","dir":"","previous_headings":"","what":"Get Started","title":"User-friendly functions and tools for nutrition researcher to explore diet design, under various nutritional and environmental constraints","text":"Read introductory vignette try following example:","code":""},{"path":"https://andreaczhang.github.io/noreden/index.html","id":"citing-noreden","dir":"","previous_headings":"Get Started","what":"Citing noreden","title":"User-friendly functions and tools for nutrition researcher to explore diet design, under various nutritional and environmental constraints","text":"cite noreden please see ","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/compare_new_diet.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare new diet with current diet — compare_new_diet","title":"Compare new diet with current diet — compare_new_diet","text":"Compare new current diet terms absolute relative (percent) change","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/compare_new_diet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare new diet with current diet — compare_new_diet","text":"","code":"compare_new_diet(data_new_diet, data_current_diet)"},{"path":"https://andreaczhang.github.io/noreden/reference/compare_new_diet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare new diet with current diet — compare_new_diet","text":"data_new_diet New diet intake data_current_diet Current diet food name average intake","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/compare_new_diet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare new diet with current diet — compare_new_diet","text":"dataframe food names, current new diet intake comparsion metrics","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/compute_constr.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute constraint values for outcomes — compute_constr","title":"Compute constraint values for outcomes — compute_constr","text":"Compute constraint values tag_outcomes, used optimisation algorithm. computation based constraint coefficients, basis multiply coefficients total contribution (either raw standardized).","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/compute_constr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute constraint values for outcomes — compute_constr","text":"","code":"compute_constr(data_total_contrib, data_constr_coef)"},{"path":"https://andreaczhang.github.io/noreden/reference/compute_constr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute constraint values for outcomes — compute_constr","text":"data_total_contrib dataframe total contribution (raw standardised) tag_outcome stored data_constr_coef dataframe lower upper constraint coefficients tag_outcome","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/compute_constr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute constraint values for outcomes — compute_constr","text":"dataframe calculated constraint values","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/compute_constr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute constraint values for outcomes — compute_constr","text":"","code":"diet_selected <- select_diet(data_diet = all_diet,                       tag_food = c('Bread', 'Vegetables', 'Red meat'))  cpu_selected <- select_perunit(data_perunit_contrib = contrib_per_unit,                          tag_food = c('Bread', 'Vegetables', 'Red meat'),                          tag_outcome = c('energy', 'protein', 'ghge'))  tc <- compute_total_contrib(data_diet = diet_selected,                        data_perunit_contrib = cpu_selected) constr_coef_df <- set_constr_coef(tag_outcome = c('energy', 'protein', 'ghge'),                                    coef_lwr = rep(0.9, 3),                                    coef_upr = rep(1.0, 3))  # reduce ghge to 0.9 constr_coef_df_red <- reduce_constr(data_constr_coef = constr_coef_df,                                      tag_outcome_reduce = 'ghge',                                      coef_reduce = 0.9) compute_constr(data_total_contrib = tc$total_contrib,                 data_constr_coef = constr_coef_df_red) #>   tag_outcome total_contrib coef_constrlwr coef_construpr  constr_lwr #> 1      energy   3327.249302           0.90            1.0 2994.524372 #> 2     protein     41.442989           0.90            1.0   37.298690 #> 3        ghge      2.006292           0.81            0.9    1.625096 #>    constr_upr #> 1 3327.249302 #> 2   41.442989 #> 3    1.805662"},{"path":"https://andreaczhang.github.io/noreden/reference/compute_std_unit_contrib.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute standardised contribution per unit based on coefficients — compute_std_unit_contrib","title":"Compute standardised contribution per unit based on coefficients — compute_std_unit_contrib","text":"Compute standardised contribution per unit tag_outcome, based standardise coefficients.","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/compute_std_unit_contrib.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute standardised contribution per unit based on coefficients — compute_std_unit_contrib","text":"","code":"compute_std_unit_contrib(uc_raw, std_coef)"},{"path":"https://andreaczhang.github.io/noreden/reference/compute_std_unit_contrib.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute standardised contribution per unit based on coefficients — compute_std_unit_contrib","text":"uc_raw dataframe contribution per unit tag_outcome stored. std_coef Standardise coefficients tag_outcome, stored dataframe.","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/compute_std_unit_contrib.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute standardised contribution per unit based on coefficients — compute_std_unit_contrib","text":"list outputs: uc_raw stores original values contribution per unit food tag_outcome std_coef standardise coefficients used compute standardized contribution per unit uc_std stores standardised values contribution per unit","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/compute_std_unit_contrib.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute standardised contribution per unit based on coefficients — compute_std_unit_contrib","text":"","code":"cpu_selected <- select_perunit(data_perunit_contrib = contrib_per_unit,                          tag_food = c('Bread', 'Vegetables', 'Red meat'),                          tag_outcome = c('energy', 'protein', 'ghge')) coefs <- compute_stdcoef(data_perunit_contrib = cpu_selected) compute_std_unit_contrib(uc_raw = cpu_selected, std_coef = coefs$std_coef) #> $uc_raw #> # A tibble: 3 × 4 #>   food_name  energy protein    ghge #>   <chr>       <dbl>   <dbl>   <dbl> #> 1 Bread       10.7   0.0912 0.00107 #> 2 Vegetables   1.57  0.0149 0.00103 #> 3 Red meat     8.34  0.173  0.0129  #>  #> $std_coef #>   tag_outcome    std_coef #> 1      energy   0.2109576 #> 2     protein  12.6767653 #> 3        ghge 145.6722840 #>  #> $uc_std #>    food_name    energy   protein      ghge #> 1      Bread 2.2563085 1.1563754 0.1558693 #> 2 Vegetables 0.3302183 0.1885935 0.1500425 #> 3   Red meat 1.7597741 2.1882512 1.8849994 #>"},{"path":"https://andreaczhang.github.io/noreden/reference/compute_stdcoef.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute standardise coefficients for contribution per unit — compute_stdcoef","title":"Compute standardise coefficients for contribution per unit — compute_stdcoef","text":"Compute standardise coefficients contribution per unit tag_outcome.","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/compute_stdcoef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute standardise coefficients for contribution per unit — compute_stdcoef","text":"","code":"compute_stdcoef(data_perunit_contrib, method = \"sd\")"},{"path":"https://andreaczhang.github.io/noreden/reference/compute_stdcoef.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute standardise coefficients for contribution per unit — compute_stdcoef","text":"data_perunit_contrib dataframe contribution per unit tag_outcome stored. method Method compute coefficient. far method = 'sd' implemented.","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/compute_stdcoef.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute standardise coefficients for contribution per unit — compute_stdcoef","text":"list outputs: std_coef stores standardization coefficients scale contribution per unit tag_outcome method returns method used computation","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/compute_stdcoef.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute standardise coefficients for contribution per unit — compute_stdcoef","text":"","code":"cpu_selected <- select_perunit(data_perunit_contrib = contrib_per_unit,                          tag_food = c('Bread', 'Vegetables', 'Red meat'),                          tag_outcome = c('energy', 'protein', 'ghge')) compute_stdcoef(data_perunit_contrib = cpu_selected) #> $std_coef #>   tag_outcome    std_coef #> 1      energy   0.2109576 #> 2     protein  12.6767653 #> 3        ghge 145.6722840 #>  #> $method #> [1] \"sd\" #>"},{"path":"https://andreaczhang.github.io/noreden/reference/compute_total_contrib.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute total contribution for outcomes — compute_total_contrib","title":"Compute total contribution for outcomes — compute_total_contrib","text":"Compute total contribution current diet regarding outcome interest.","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/compute_total_contrib.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute total contribution for outcomes — compute_total_contrib","text":"","code":"compute_total_contrib(data_diet, data_perunit_contrib)"},{"path":"https://andreaczhang.github.io/noreden/reference/compute_total_contrib.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute total contribution for outcomes — compute_total_contrib","text":"data_diet dataframe diet intake information stored data_perunit_contrib dataframe contribution per unit tag_outcome stored. also standardized contribution per unit.","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/compute_total_contrib.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute total contribution for outcomes — compute_total_contrib","text":"list outputs: total_contrib stores total contribution current diet tag_food stores names foods tag_outcome stores names outcomes","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/compute_total_contrib.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute total contribution for outcomes — compute_total_contrib","text":"","code":"diet_selected <- select_diet(data_diet = all_diet,                       tag_food = c('Bread', 'Vegetables', 'Red meat'))  cpu_selected <- select_perunit(data_perunit_contrib = contrib_per_unit,                          tag_food = c('Bread', 'Vegetables', 'Red meat'),                          tag_outcome = c('energy', 'protein', 'ghge'))  compute_total_contrib(data_diet = diet_selected,                        data_perunit_contrib = cpu_selected) #> $total_contrib #>   tag_outcome total_contrib #> 1      energy   3327.249302 #> 2     protein     41.442989 #> 3        ghge      2.006292 #>  #> $tag_food #> [1] \"Bread\"      \"Vegetables\" \"Red meat\"   #>  #> $tag_outcome #> [1] \"energy\"  \"protein\" \"ghge\"    #>"},{"path":"https://andreaczhang.github.io/noreden/reference/data_contrib.html","id":null,"dir":"Reference","previous_headings":"","what":"Demo data: new diet contribution to nutrients and env impact — data_contrib","title":"Demo data: new diet contribution to nutrients and env impact — data_contrib","text":"Demo data visualization development purposes.","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/data_contrib.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Demo data: new diet contribution to nutrients and env impact — data_contrib","text":"","code":"data_contrib"},{"path":"https://andreaczhang.github.io/noreden/reference/data_contrib.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Demo data: new diet contribution to nutrients and env impact — data_contrib","text":"tag_outcome Nutrient env impact name total_contrib_raw  min  max  tc_new_diet  is_ok  dev_if_not_ok","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/data_newdiet.html","id":null,"dir":"Reference","previous_headings":"","what":"Demo data: new diet comparison — data_newdiet","title":"Demo data: new diet comparison — data_newdiet","text":"Demo data visualization development purposes.","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/data_newdiet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Demo data: new diet comparison — data_newdiet","text":"","code":"data_newdiet"},{"path":"https://andreaczhang.github.io/noreden/reference/data_newdiet.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Demo data: new diet comparison — data_newdiet","text":"food_name Food name current  new  absolute_change  percent_change  diet_bound_lwr  diet_bound_upr","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/f_make_constraint_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Make inequality constraint functions based on constraint values — f_make_constraint_function","title":"Make inequality constraint functions based on constraint values — f_make_constraint_function","text":"Make inequality constraint functions, used inputs optimization. far offers possibility 7 tag_outcomes; shall expand.","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/f_make_constraint_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make inequality constraint functions based on constraint values — f_make_constraint_function","text":"","code":"f_make_constraint_function(constraint_values, tag_outcomes)"},{"path":"https://andreaczhang.github.io/noreden/reference/f_make_constraint_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make inequality constraint functions based on constraint values — f_make_constraint_function","text":"constraint_values list constraint values organized tag_outcome. Output values_by_tag_outcome() tag_outcomes vector tag_outcome interest","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/f_make_constraint_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make inequality constraint functions based on constraint values — f_make_constraint_function","text":"function used optimization","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/f_make_objective_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Make objective function based on current diet — f_make_objective_function","title":"Make objective function based on current diet — f_make_objective_function","text":"Make objective function based current diet, used inputs optimization.","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/f_make_objective_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make objective function based on current diet — f_make_objective_function","text":"","code":"f_make_objective_function(diet0, method = \"ss\")"},{"path":"https://andreaczhang.github.io/noreden/reference/f_make_objective_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make objective function based on current diet — f_make_objective_function","text":"diet0 vector diet intake method Specify method use compute objective function values. far 'ss' (sum squares) implemented.","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/f_make_objective_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make objective function based on current diet — f_make_objective_function","text":"function used optimization","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/f_make_objective_function.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make objective function based on current diet — f_make_objective_function","text":"","code":"# a demo example with 3 foods intakes funobj <- f_make_objective_function(diet0 = c(187, 200, 55)) # to evaluate a new diet funobj(x = c(187, 200, 50)) #> [1] 25"},{"path":"https://andreaczhang.github.io/noreden/reference/find_new_diet.html","id":null,"dir":"Reference","previous_headings":"","what":"New diet discovery — find_new_diet","title":"New diet discovery — find_new_diet","text":"Find new diet combination satisfies set nutrition environmental impact constraints.","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/find_new_diet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"New diet discovery — find_new_diet","text":"","code":"find_new_diet(   diet0,   diet0_upr,   diet0_lwr,   tag_outcomes,   constraint_val,   print_runtime = T )"},{"path":"https://andreaczhang.github.io/noreden/reference/find_new_diet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"New diet discovery — find_new_diet","text":"diet0 vector current diet intake diet0_upr vector values set upper bound diet search diet0_lwr vector values set lower bound diet search tag_outcomes vector tag_outcome interest constraint_val list constraint values match tag_outcomes print_runtime Whether print runtime. Default True.","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/find_new_diet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"New diet discovery — find_new_diet","text":"list results","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/foodname_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Macro food group (used for plotting purpose) — foodname_group","title":"Macro food group (used for plotting purpose) — foodname_group","text":"dataset contains information bigger food groups. 7 big groups, 28 sub-groups.","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/foodname_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Macro food group (used for plotting purpose) — foodname_group","text":"","code":"foodname_group"},{"path":"https://andreaczhang.github.io/noreden/reference/foodname_group.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Macro food group (used for plotting purpose) — foodname_group","text":"group_macro 7 macro food groups food_name 28 food subgroups","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/fplaceholder.html","id":null,"dir":"Reference","previous_headings":"","what":"A placeholder function — fplaceholder","title":"A placeholder function — fplaceholder","text":"placeholder function","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/fplaceholder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A placeholder function — fplaceholder","text":"","code":"fplaceholder(x)"},{"path":"https://andreaczhang.github.io/noreden/reference/fplaceholder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A placeholder function — fplaceholder","text":"x numeric value","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/fplaceholder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A placeholder function — fplaceholder","text":"another numeric value","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/fplaceholder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A placeholder function — fplaceholder","text":"","code":"fplaceholder(x = 2) #> [1] 3"},{"path":"https://andreaczhang.github.io/noreden/reference/plot.diet_comparison_gram.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting function for diet comparison summary — plot.diet_comparison_gram","title":"Plotting function for diet comparison summary — plot.diet_comparison_gram","text":"Plotting function diet comparison summary","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/plot.diet_comparison_gram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting function for diet comparison summary — plot.diet_comparison_gram","text":"","code":"# S3 method for diet_comparison_gram plot(plot_obj, title_text, axis_x_text, axis_y_text)"},{"path":"https://andreaczhang.github.io/noreden/reference/plot.diet_comparison_gram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting function for diet comparison summary — plot.diet_comparison_gram","text":"plot_obj object class <diet_comparison_percent> title_text Title plot axis_x_text X axis title axis_y_text Y axis title","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/plot.diet_comparison_gram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting function for diet comparison summary — plot.diet_comparison_gram","text":"plot","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/plot.diet_comparison_gram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting function for diet comparison summary — plot.diet_comparison_gram","text":"","code":"library(ggplot2) ddd <- prep_diet_comparison_gram(data_dietsummary = data_newdiet) plot(plot_obj = ddd,                           title_text = 'New diet',                          axis_x_text = 'Food groups',                           axis_y_text = 'Intake (grams)')"},{"path":"https://andreaczhang.github.io/noreden/reference/plot.diet_comparison_percent.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting function for diet comparison summary — plot.diet_comparison_percent","title":"Plotting function for diet comparison summary — plot.diet_comparison_percent","text":"Plotting function diet comparison summary","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/plot.diet_comparison_percent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting function for diet comparison summary — plot.diet_comparison_percent","text":"","code":"# S3 method for diet_comparison_percent plot(plot_obj, title_text, axis_x_text, axis_y_text)"},{"path":"https://andreaczhang.github.io/noreden/reference/plot.diet_comparison_percent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting function for diet comparison summary — plot.diet_comparison_percent","text":"plot_obj object class <diet_comparison_percent> title_text Title plot axis_x_text X axis title axis_y_text Y axis title","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/plot.diet_comparison_percent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting function for diet comparison summary — plot.diet_comparison_percent","text":"plot","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/plot.diet_comparison_percent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting function for diet comparison summary — plot.diet_comparison_percent","text":"","code":"ddd <- prep_diet_comparison_percent(data_dietsummary = data_newdiet) plot(plot_obj = ddd,                           title_text = 'Percent change',                          axis_x_text = 'Food groups',                           axis_y_text = 'Percent')"},{"path":"https://andreaczhang.github.io/noreden/reference/plot_diet_comparison_gram.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting function for diet comparison summary — plot_diet_comparison_gram","title":"Plotting function for diet comparison summary — plot_diet_comparison_gram","text":"Plotting function diet comparison summary","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/plot_diet_comparison_gram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting function for diet comparison summary — plot_diet_comparison_gram","text":"","code":"plot_diet_comparison_gram(plot_obj, title_text, axis_x_text, axis_y_text)"},{"path":"https://andreaczhang.github.io/noreden/reference/plot_diet_comparison_gram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting function for diet comparison summary — plot_diet_comparison_gram","text":"plot_obj object class <diet_comparison_percent> title_text Title plot axis_x_text X axis title axis_y_text Y axis title","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/plot_diet_comparison_gram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting function for diet comparison summary — plot_diet_comparison_gram","text":"plot","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/plot_diet_comparison_gram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting function for diet comparison summary — plot_diet_comparison_gram","text":"","code":"ddd <- prep_diet_comparison_gram(data_dietsummary = data_newdiet) plot_diet_comparison_gram(plot_obj = ddd,                           title_text = 'New diet',                          axis_x_text = 'Food groups',                           axis_y_text = 'Intake (grams)')"},{"path":"https://andreaczhang.github.io/noreden/reference/plot_diet_comparison_percent.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting function for diet comparison summary — plot_diet_comparison_percent","title":"Plotting function for diet comparison summary — plot_diet_comparison_percent","text":"Plotting function diet comparison summary","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/plot_diet_comparison_percent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting function for diet comparison summary — plot_diet_comparison_percent","text":"","code":"plot_diet_comparison_percent(plot_obj, title_text, axis_x_text, axis_y_text)"},{"path":"https://andreaczhang.github.io/noreden/reference/plot_diet_comparison_percent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting function for diet comparison summary — plot_diet_comparison_percent","text":"plot_obj object class <diet_comparison_percent> title_text Title plot axis_x_text X axis title axis_y_text Y axis title","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/plot_diet_comparison_percent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting function for diet comparison summary — plot_diet_comparison_percent","text":"plot","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/plot_diet_comparison_percent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting function for diet comparison summary — plot_diet_comparison_percent","text":"","code":"ddd <- prep_diet_comparison_percent(data_dietsummary = data_newdiet) plot_diet_comparison_percent(plot_obj = ddd,                           title_text = 'Percent change',                          axis_x_text = 'Food groups',                           axis_y_text = 'Percent')"},{"path":"https://andreaczhang.github.io/noreden/reference/prep_contrib.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary table preparation for fast checking constraint fulfilment — prep_contrib","title":"Summary table preparation for fast checking constraint fulfilment — prep_contrib","text":"Summary table preparation fast checking constraint fulfilment","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/prep_contrib.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary table preparation for fast checking constraint fulfilment — prep_contrib","text":"","code":"prep_contrib(data_contrib, demo = F)"},{"path":"https://andreaczhang.github.io/noreden/reference/prep_contrib.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary table preparation for fast checking constraint fulfilment — prep_contrib","text":"data_contrib summary table results demo T F, demonstration","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/prep_contrib.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary table preparation for fast checking constraint fulfilment — prep_contrib","text":"dataframe","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/prep_contrib.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary table preparation for fast checking constraint fulfilment — prep_contrib","text":"","code":"dtt <- prep_contrib(data_contrib = data_contrib, demo = T) #> Error in `:=`(min, round(min, digits = 1)): could not find function \":=\""},{"path":"https://andreaczhang.github.io/noreden/reference/prep_diet_comparison_gram.html","id":null,"dir":"Reference","previous_headings":"","what":"Make diet comparison summary table (intake in grams) — prep_diet_comparison_gram","title":"Make diet comparison summary table (intake in grams) — prep_diet_comparison_gram","text":"Make diet comparison summary table (intake grams)","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/prep_diet_comparison_gram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make diet comparison summary table (intake in grams) — prep_diet_comparison_gram","text":"","code":"prep_diet_comparison_gram(   data_dietsummary,   dref_foodgroup = noreden::foodname_group )"},{"path":"https://andreaczhang.github.io/noreden/reference/prep_diet_comparison_gram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make diet comparison summary table (intake in grams) — prep_diet_comparison_gram","text":"data_dietsummary dataframe contains x,y,z dref_foodgroup reference dataframe provide food group information","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/prep_diet_comparison_gram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make diet comparison summary table (intake in grams) — prep_diet_comparison_gram","text":"list items (pending description)","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/prep_diet_comparison_gram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make diet comparison summary table (intake in grams) — prep_diet_comparison_gram","text":"","code":"ddd <- prep_diet_comparison_gram(data_dietsummary = data_newdiet)"},{"path":"https://andreaczhang.github.io/noreden/reference/prep_diet_comparison_percent.html","id":null,"dir":"Reference","previous_headings":"","what":"Make diet comparison summary table (percent change) — prep_diet_comparison_percent","title":"Make diet comparison summary table (percent change) — prep_diet_comparison_percent","text":"Make diet comparison summary table (percent change)","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/prep_diet_comparison_percent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make diet comparison summary table (percent change) — prep_diet_comparison_percent","text":"","code":"prep_diet_comparison_percent(   data_dietsummary,   dref_foodgroup = noreden::foodname_group )"},{"path":"https://andreaczhang.github.io/noreden/reference/prep_diet_comparison_percent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make diet comparison summary table (percent change) — prep_diet_comparison_percent","text":"data_dietsummary dataframe contains x,y,z dref_foodgroup reference dataframe provide food group information","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/prep_diet_comparison_percent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make diet comparison summary table (percent change) — prep_diet_comparison_percent","text":"list items (pending description)","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/prep_diet_comparison_percent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make diet comparison summary table (percent change) — prep_diet_comparison_percent","text":"","code":"ddd <- prep_diet_comparison_percent(data_dietsummary = data_newdiet)"},{"path":"https://andreaczhang.github.io/noreden/reference/reduce_constr.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute reduced constraint coefficients — reduce_constr","title":"Compute reduced constraint coefficients — reduce_constr","text":"Reduce constraint coefficient one specific tag_outcome","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/reduce_constr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute reduced constraint coefficients — reduce_constr","text":"","code":"reduce_constr(data_constr_coef, tag_outcome_reduce, coef_reduce)"},{"path":"https://andreaczhang.github.io/noreden/reference/reduce_constr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute reduced constraint coefficients — reduce_constr","text":"data_constr_coef dataframe constraint coefficients stored tag_outcome_reduce Name tag_outcome reduce coef_reduce Numeric value multiply constraint coefficients selected tag_outcome","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/reduce_constr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute reduced constraint coefficients — reduce_constr","text":"dataframe tag_outcome updated coefficients.","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/reduce_constr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute reduced constraint coefficients — reduce_constr","text":"","code":"tag_outcomes <- c('energy', 'protein', 'ghge') constr_coef_df <- set_constr_coef(tag_outcome = tag_outcomes,    coef_lwr = rep(0.9, length(tag_outcomes)),    coef_upr = rep(1.0, length(tag_outcomes))) # reduce the coefficients of ghge to 90% its original value reduce_constr(data_constr_coef = constr_coef_df,    tag_outcome_reduce = 'ghge',    coef_reduce = 0.9) #>   tag_outcome coef_constrlwr coef_construpr #> 1      energy           0.90            1.0 #> 2     protein           0.90            1.0 #> 3        ghge           0.81            0.9"},{"path":"https://andreaczhang.github.io/noreden/reference/return_new_diet.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect results from the new diet discovery — return_new_diet","title":"Collect results from the new diet discovery — return_new_diet","text":"Collect results new diet discovery, along current diet.","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/return_new_diet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect results from the new diet discovery — return_new_diet","text":"","code":"return_new_diet(result_obj, data_current_diet)"},{"path":"https://andreaczhang.github.io/noreden/reference/return_new_diet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect results from the new diet discovery — return_new_diet","text":"result_obj Result object new diet discovry data_current_diet Current diet food name average intake","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/return_new_diet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect results from the new diet discovery — return_new_diet","text":"dataframe food names, current diet new diet","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/select_diet.html","id":null,"dir":"Reference","previous_headings":"","what":"Select a set of foods — select_diet","title":"Select a set of foods — select_diet","text":"Food selector based bigger table, used provide current diet information.","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/select_diet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select a set of foods — select_diet","text":"","code":"select_diet(data_diet, tag_food, minmax = T)"},{"path":"https://andreaczhang.github.io/noreden/reference/select_diet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select a set of foods — select_diet","text":"data_diet Data contain food (group) names current diet information. tag_food vector food names choose minmax Whether return min max limit feasible set new diet","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/select_diet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select a set of foods — select_diet","text":"dataframe food names diet intake selected foods","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/select_diet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select a set of foods — select_diet","text":"","code":"foods <- c('Bread', 'Vegetables', 'Red meat') select_diet(data_diet = all_diet, tag_food = foods) #> # A tibble: 3 × 4 #>   food_name  intake_mean intake_lwr intake_upr #>   <chr>            <dbl>      <dbl>      <dbl> #> 1 Bread             188.       18.8       344. #> 2 Vegetables        166.       16.6       420. #> 3 Red meat          126.       12.6       300."},{"path":"https://andreaczhang.github.io/noreden/reference/select_perunit.html","id":null,"dir":"Reference","previous_headings":"","what":"Select contribution per unit for nutrition and environmental impact outcomes — select_perunit","title":"Select contribution per unit for nutrition and environmental impact outcomes — select_perunit","text":"Select contribution per unit information based bigger table.","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/select_perunit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select contribution per unit for nutrition and environmental impact outcomes — select_perunit","text":"","code":"select_perunit(data_perunit_contrib, tag_food, tag_outcome)"},{"path":"https://andreaczhang.github.io/noreden/reference/select_perunit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select contribution per unit for nutrition and environmental impact outcomes — select_perunit","text":"data_perunit_contrib Data contain food (group) names current diet information. tag_food vector food names choose tag_outcome Whether return min max limit feasible set new diet","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/select_perunit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select contribution per unit for nutrition and environmental impact outcomes — select_perunit","text":"dataframe food names diet intake selected foods","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/select_perunit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select contribution per unit for nutrition and environmental impact outcomes — select_perunit","text":"","code":"foods <- c('Bread', 'Vegetables', 'Red meat') tag_outcomes <- c('energy', 'protein', 'ghge') select_perunit(data_perunit_contrib = contrib_per_unit, tag_food = foods, tag_outcome = tag_outcomes) #> # A tibble: 3 × 4 #>   food_name  energy protein    ghge #>   <chr>       <dbl>   <dbl>   <dbl> #> 1 Bread       10.7   0.0912 0.00107 #> 2 Vegetables   1.57  0.0149 0.00103 #> 3 Red meat     8.34  0.173  0.0129"},{"path":"https://andreaczhang.github.io/noreden/reference/set_constr_coef.html","id":null,"dir":"Reference","previous_headings":"","what":"Set constraint coefficients — set_constr_coef","title":"Set constraint coefficients — set_constr_coef","text":"constraint coefficients used compute inequality constraints based total contribution. coefficients come pairs: tag_outcome, lower upper bounds constraint values.","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/set_constr_coef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set constraint coefficients — set_constr_coef","text":"","code":"set_constr_coef(tag_outcome, coef_lwr, coef_upr)"},{"path":"https://andreaczhang.github.io/noreden/reference/set_constr_coef.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set constraint coefficients — set_constr_coef","text":"tag_outcome vector tag_outcome. coef_lwr vector values set lower bound, used multiply total contribution. coef_upr vector values set upper bound, used multiply total contribution.","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/set_constr_coef.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set constraint coefficients — set_constr_coef","text":"dataframe tag_outcome coefficients.","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/set_constr_coef.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set constraint coefficients — set_constr_coef","text":"","code":"tag_outcomes <- c('energy', 'protein', 'ghge') set_constr_coef(tag_outcome = tag_outcomes,    coef_lwr = rep(0.9, length(tag_outcomes)),    coef_upr = rep(1.0, length(tag_outcomes))) #>   tag_outcome coef_constrlwr coef_construpr #> 1      energy            0.9              1 #> 2     protein            0.9              1 #> 3        ghge            0.9              1"},{"path":"https://andreaczhang.github.io/noreden/reference/tab_contrib.html","id":null,"dir":"Reference","previous_headings":"","what":"Make gt table for the diet contribution summary — tab_contrib","title":"Make gt table for the diet contribution summary — tab_contrib","text":"Make gt table diet contribution summary","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/tab_contrib.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make gt table for the diet contribution summary — tab_contrib","text":"","code":"tab_contrib(tab_obj)"},{"path":"https://andreaczhang.github.io/noreden/reference/tab_contrib.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make gt table for the diet contribution summary — tab_contrib","text":"tab_obj table object prep_contrib()","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/tab_contrib.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make gt table for the diet contribution summary — tab_contrib","text":"gt table coloring","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/tab_contrib.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make gt table for the diet contribution summary — tab_contrib","text":"","code":"tab_contrib(tab_obj = dtt) #> Error in eval(expr, envir, enclos): object 'dtt' not found"},{"path":"https://andreaczhang.github.io/noreden/reference/validate_diet_contrib.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare new diet with current diet — validate_diet_contrib","title":"Compare new diet with current diet — validate_diet_contrib","text":"Compare new current diet terms absolute relative (percent) change","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/validate_diet_contrib.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare new diet with current diet — validate_diet_contrib","text":"","code":"validate_diet_contrib(data_new_diet, data_unit_contrib, data_constr)"},{"path":"https://andreaczhang.github.io/noreden/reference/validate_diet_contrib.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare new diet with current diet — validate_diet_contrib","text":"data_new_diet New diet intake data_constr Constraint values compare new total contribution data_current_diet Current diet food name average intake","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/validate_diet_contrib.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare new diet with current diet — validate_diet_contrib","text":"dataframe tag_outcome, total contribution diet whether within constraints","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/values_by_tag_outcome.html","id":null,"dir":"Reference","previous_headings":"","what":"Organize input values for outcomes — values_by_tag_outcome","title":"Organize input values for outcomes — values_by_tag_outcome","text":"optimization algorithm requires three inputs per tag_outcome, 'energy': contribution per unit (either standardized raw) food upper bound total contribution lower bound total contribution","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/values_by_tag_outcome.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Organize input values for outcomes — values_by_tag_outcome","text":"","code":"values_by_tag_outcome(data_unit_contrib, data_constr)"},{"path":"https://andreaczhang.github.io/noreden/reference/values_by_tag_outcome.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Organize input values for outcomes — values_by_tag_outcome","text":"data_unit_contrib dataframe total contribution (raw standardised) tag_outcome stored data_constr dataframe lower upper constraint coefficients tag_outcome","code":""},{"path":"https://andreaczhang.github.io/noreden/reference/values_by_tag_outcome.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Organize input values for outcomes — values_by_tag_outcome","text":"list outputs, organized tag_outcome","code":""}]
